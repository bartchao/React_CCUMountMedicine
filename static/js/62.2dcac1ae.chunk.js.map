{"version":3,"file":"static/js/62.2dcac1ae.chunk.js","mappings":"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","sources":["components/UIComponenets/TeamInfo.jsx","hook/hooks.js","components/UIComponenets/MobileCountDialog.jsx","components/UIComponenets/MedicineItem.jsx","components/UIComponenets/MedicineCategory.jsx","components/UIComponenets/AddMedicineFormDialog.jsx","pages/Calculate.jsx"],"sourcesContent":["import { List, ListItem, ListItemAvatar, Avatar, ListItemText,ListSubheader,Paper } from '@mui/material';\nimport LandscapeIcon from '@mui/icons-material/Landscape';\nimport PeopleIcon from '@mui/icons-material/People';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport PlaceIcon from '@mui/icons-material/Place';\nimport { useSelector } from 'react-redux';\nfunction TeamInfo() {\n    const teamData = useSelector((state) => state.teamInfo);\n    return (\n        <Paper elevation={1} sx={{ width: '100%'}}>\n            <List subheader={<ListSubheader>隊伍資訊</ListSubheader>}>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <PlaceIcon/>\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"隊伍名稱\" secondary={teamData.teamName} />\n            </ListItem>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <LandscapeIcon/>\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"最高海拔\" secondary={teamData.teamAttitude} />\n            </ListItem>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <CalendarTodayIcon/>\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"天數\" secondary={teamData.teamDays} />\n            </ListItem>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar>\n                        <PeopleIcon/>\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"人數\" secondary={teamData.teamPerson} />\n            </ListItem>\n            </List>\n            </Paper>);\n}\nexport default TeamInfo;","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nfunction useReset(formula) {\n    const person = useSelector((state) => state.teamInfo.teamPerson);\n    const days = useSelector((state) => state.teamInfo.teamDays);\n    return (eval(formula));\n}\n\nfunction useCheck() {\n    const teamName = useSelector((state) => state.teamInfo.teamName);\n    const navigate = useNavigate();\n    useEffect(() => {\n        if (teamName === undefined) {\n        alert('尚未輸入隊伍資訊')\n            navigate('/', { replace: true });\n    }\n    }, [teamName])\n\n}\n\nexport { useCheck, useReset };","import { Dialog, DialogActions,DialogTitle,Stack,Input,IconButton,Button, DialogContent } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nexport default function CountDialog(props) {\n  const { onClose, count, open,onCountChange,handleReset } = props;\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n              <DialogTitle>設定數量</DialogTitle>\n              <DialogContent>\n        <Stack direction=\"row\" spacing={1}>\n          <IconButton onClick={()=> onCountChange(count-1)}>\n            <RemoveIcon />\n          </IconButton>\n          <Input\n            size=\"small\"\n            value={count}\n            label=\"數量\"\n            sx={{ width: 80 }}\n            inputProps={{ min: 0, style: { textAlign: 'center' } }}\n          ></Input>\n          <IconButton onClick={()=> onCountChange(count+1)}>\n            <AddIcon />\n          </IconButton>\n                  </Stack>\n                  </DialogContent>\n          <DialogActions>\n                  <Button onClick={handleReset}>重設</Button>\n              \n                  <Button onClick={handleClose}>關閉</Button>\n        </DialogActions>\n    </Dialog>\n  );\n}","import { useState } from 'react';\nimport {\n  Box,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  IconButton,\n  Grid,\n  Typography,\n  Paper,\n  Card,\n  CardContent,\n  CardActions,\n  Modal,\n  Stack,\n} from '@mui/material';\nimport { Delete } from '@mui/icons-material/';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport CountDialog from './MobileCountDialog';\nimport { useReset } from 'src/hook/hooks';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { modifyMedicineItemInCategory } from 'src/store/modules/medicine/medicineSlice';\nconst ModalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n};\nexport default function MedicineItem({ data, handleDelete }) {\n  const { title, subtitle, text, formula, count, uuid } = data;\n  const theme = useTheme();\n  const showUsage = useSelector((state) => state.view.showUsage);\n  const dispatch = useDispatch();\n  const matchesTouch = useMediaQuery(theme.breakpoints.up('md'));\n  const [style, setStyle] = useState({ visibility: 'hidden' });\n  const [countDialogOpen, setCountDialogOpen] = useState(false);\n  const [infoModalOpen, setInfoModalOpen] = useState(false);\n  const [newCount, setNewCount] = useState(count);\n  const defaultValue = useReset(formula);\n  const handleCountDialogOpen = () => {\n    setCountDialogOpen(true);\n  };\n\n  const handleCountDialogClose = () => {\n    setCountDialogOpen(false);\n  };\n  const handleInfoModalOpen = () => {\n    setInfoModalOpen(true);\n  };\n  const handleInfoModalClose = () => {\n    setInfoModalOpen(false);\n  };\n  const handleCountChange = (value) => {\n    if (value >= 0) {\n      setNewCount(value);\n      dispatch(modifyMedicineItemInCategory({ uuid, value }));\n    }\n  };\n  const countColorButton = () => {\n    if (newCount > defaultValue) {\n      return 'success';\n    } else if(newCount < defaultValue) {\n      return 'error';\n    } else {\n      return 'primary';\n    }\n  };\n  const countColorText = () => {\n    let text = countColorButton();\n    return theme.palette[text].main;\n  };\n  return (\n    <>\n      <Grid item lg={6} xs={12}>\n        <Paper elevation={2}>\n          <ListItem\n            onMouseEnter={(e) => {\n              setStyle({});\n            }}\n            onMouseLeave={(e) => {\n              setStyle({ visibility: 'hidden' });\n            }}\n            disablePadding\n          >\n            <ListItemButton >\n              <ListItemText primary={title} secondary={showUsage ? text:subtitle} sx={{ paddingRight:2 }} onClick={handleInfoModalOpen}/>\n              {matchesTouch && (\n                <Stack direction=\"row\" sx={{ minWidth: 200 }}>\n                  <Box sx={style}>\n                    <IconButton onClick={() => handleDelete(uuid)}>\n                      <Delete />\n                    </IconButton>\n                    <IconButton onClick={() => handleCountChange(newCount - 1)}>\n                      <RemoveIcon />\n                    </IconButton>\n                    <IconButton onClick={() => handleCountChange(newCount + 1)}>\n                      <AddIcon />\n                    </IconButton>\n                  </Box>\n                  <Button onClick={handleCountDialogOpen}>\n                    <Typography color={countColorText()} variant=\"h5\"><b>{newCount}</b></Typography>\n                  </Button>\n                </Stack>\n              )}\n              {!matchesTouch && (\n                <Button variant=\"contained\" color={countColorButton()} onClick={handleCountDialogOpen}>\n                  <Typography variant=\"h6\">{newCount}</Typography>\n                </Button>\n              )}\n            </ListItemButton>\n          </ListItem>\n        </Paper>\n        <CountDialog\n          count={newCount}\n          open={countDialogOpen}\n          onClose={handleCountDialogClose}\n          onCountChange={handleCountChange}\n          handleReset={() => handleCountChange(defaultValue)}\n        />\n      </Grid>\n      <Modal\n        open={infoModalOpen}\n        onClose={handleInfoModalClose}\n        aria-labelledby=\"child-modal-title\"\n        aria-describedby=\"child-modal-description\"\n      >\n        <Box sx={{ ...ModalStyle }}>\n          <Card sx={{ minWidth: 400 }}>\n            <CardContent>\n              <Typography variant=\"h5\" color=\"text.primary\">\n                {title}\n              </Typography>\n              <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                {subtitle}\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                {text}\n              </Typography>\n              <Typography variant=\"overline\">\n                公式:{formula.replace('days', '天數').replace('person', '人數')}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\">Learn More</Button>\n            </CardActions>\n          </Card>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","\nimport {\n  Grid\n} from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { deleteItem } from 'src/store/modules/medicine/medicineSlice';\nimport MedicineItem from './MedicineItem';\n\n\nexport default function MedicineCategory({ data, index }) {\n  const dispatch = useDispatch();\n\n\n  const handleDelete = (uuid) => {\n    let item = {\n      index: index,\n      uuid:uuid\n    }\n    dispatch(deleteItem(item));\n  }\n  \n  return (\n    <Grid container spacing={2}>\n      {data.item.map((el, index) => (\n        <MedicineItem key={index} index={index} data={el} handleDelete={handleDelete}  />\n      ))}\n    </Grid>\n  )\n}\n","import { useState, useRef } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { addMedicineItem,medicineList } from 'src/store/modules/medicine/medicineSlice';\n\nexport default function AddMedicineItem({ target,sx }) {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const medicine = useSelector(medicineList);\n  const addToCategory = medicine[target].category;\n  const medicineNameRef = useRef();\n  const medicineSubNameRef = useRef();\n  const medicineUsageRef = useRef();\n  const medicineFormulaRef = useRef();\n  const medicineCountRef = useRef();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSubmit = () => {\n    let title = medicineNameRef.current.value;\n    let subtitle = medicineSubNameRef.current.value;\n    let text = medicineUsageRef.current.value;\n    let formula = medicineFormulaRef.current.value;\n    let count = medicineCountRef.current.value;\n    let payload = { title, subtitle, text, formula, count, target };\n    dispatch(addMedicineItem(payload));\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <div style={sx}>\n        <Fab\n          size=\"medium\"\n          color=\"secondary\"\n          aria-label=\"add\"\n          onClick={handleClickOpen}\n        >\n          <AddIcon />\n        </Fab>\n      </div>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>新增藥物項目</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            將新增至 <b>{addToCategory}</b>\n          </DialogContentText>\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"medicineName\"\n            label=\"藥物名稱\"\n            variant=\"standard\"\n            fullWidth\n            required\n            inputRef={medicineNameRef}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"medicineSubName\"\n            label=\"(學名藥)\"\n            fullWidth\n            variant=\"standard\"\n            inputRef={medicineSubNameRef}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"medicineUsage\"\n            label=\"用法\"\n            multiline\n            fullWidth\n            inputRef={medicineUsageRef}\n            variant=\"standard\"\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"medicineFormula\"\n            label=\"公式\"\n            placeholder=\"(天數:days/人數:person)\"\n            fullWidth\n            variant=\"standard\"\n            inputRef={medicineFormulaRef}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"medicineCount\"\n            label=\"藥物數量\"\n            type=\"number\"\n            fullWidth\n            variant=\"standard\"\n            inputRef={medicineCountRef}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>取消</Button>\n          <Button onClick={handleSubmit}>新增</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n  Paper,\r\n  FormControlLabel,\r\n  Switch,\r\n  Fab\r\n} from '@mui/material/';\r\nimport TeamInfo from '@components/UIComponenets/TeamInfo';\r\nimport MedicineCategory from '@components/UIComponenets/MedicineCategory';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { medicineList } from 'src/store/modules/medicine/medicineSlice';\r\nimport AddMedicineItem from '@components/UIComponenets/AddMedicineFormDialog';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { setShowUsage } from '@store/view/viewSlice';\r\nimport { useCheck } from 'src/hook/hooks';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default function CalculatePage() {\r\n  const [value, setValue] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const [usageChecked, setUsageChecked] = useState(false);\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const matchesTouch = useMediaQuery(theme.breakpoints.up('md'));\r\n  useCheck();\r\n  const medicine = useSelector(medicineList);\r\n  const handleChange = (event,newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleUsageChecked = () => {\r\n    let newState = !usageChecked;\r\n    setUsageChecked(newState);\r\n    dispatch(setShowUsage(newState));\r\n  };\r\n  const handlePrint = () => {\r\n    navigate('/print');\r\n  }\r\n  const Switches = (\r\n    <FormControlLabel\r\n      control={<Switch checked={usageChecked} onChange={handleUsageChecked} />}\r\n      label=\"顯示用法\"\r\n      sx={{ marginLeft: 'auto' }} />\r\n  );\r\n  const ActionButton = (\r\n    <>\r\n    <AddMedicineItem target={value} sx={{ position: 'fixed', bottom: 20, right: 20 }} />\r\n    <div style={{ position: 'fixed', bottom: 80, right: 20 }}>\r\n        <Fab\r\n          size=\"medium\"\r\n          color=\"secondary\"\r\n          aria-label=\"print\"\r\n          onClick={handlePrint}\r\n        >\r\n          <ArrowForwardIcon />\r\n        </Fab>\r\n      </div>\r\n    </>\r\n  );\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xl\">\r\n      <Grid container spacing={2}>\r\n        <Grid item md={2} xs={12}>\r\n          <TeamInfo />\r\n        </Grid>\r\n        <Grid item md={10} xs={12}>\r\n          <Paper elevation={1}>\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n              <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n              >\r\n                {medicine && medicine.map((category, index) => (\r\n                  <Tab label={category.category} value={index} />\r\n                ))}\r\n                {matchesTouch && Switches}\r\n              </Tabs>\r\n              {!matchesTouch && Switches}\r\n            </Box>\r\n            {medicine && medicine.map((category, index) => (\r\n              <TabPanel value={value} index={index}>\r\n                <MedicineCategory data={category} index={index} />\r\n              </TabPanel>\r\n            ))}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      {medicine && ActionButton}\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["teamData","useSelector","state","teamInfo","elevation","sx","width","subheader","primary","secondary","teamName","teamAttitude","teamDays","teamPerson","useReset","formula","person","days","eval","useCheck","navigate","useNavigate","useEffect","undefined","alert","replace","CountDialog","props","onClose","count","open","onCountChange","handleReset","handleClose","Dialog","DialogTitle","DialogContent","Stack","direction","spacing","IconButton","onClick","Remove","Input","size","value","label","inputProps","min","style","textAlign","Add","DialogActions","Button","ModalStyle","position","top","left","transform","bgcolor","boxShadow","MedicineItem","data","handleDelete","title","subtitle","text","uuid","theme","useTheme","showUsage","view","dispatch","useDispatch","matchesTouch","useMediaQuery","breakpoints","up","useState","visibility","setStyle","countDialogOpen","setCountDialogOpen","infoModalOpen","setInfoModalOpen","newCount","setNewCount","defaultValue","handleCountDialogOpen","handleCountChange","modifyMedicineItemInCategory","countColorButton","Grid","item","lg","xs","Paper","ListItem","onMouseEnter","e","onMouseLeave","disablePadding","ListItemButton","ListItemText","paddingRight","minWidth","Box","Delete","Typography","color","palette","main","countColorText","variant","Modal","Card","CardContent","mb","gutterBottom","CardActions","MedicineCategory","index","deleteItem","container","map","el","AddMedicineItem","target","setOpen","addToCategory","medicineList","category","medicineNameRef","useRef","medicineSubNameRef","medicineUsageRef","medicineFormulaRef","medicineCountRef","Fab","DialogContentText","TextField","autoFocus","margin","id","fullWidth","required","inputRef","multiline","placeholder","type","payload","current","addMedicineItem","TabPanel","children","other","role","hidden","p","CalculatePage","setValue","usageChecked","setUsageChecked","medicine","Switches","FormControlLabel","control","Switch","checked","onChange","newState","setShowUsage","marginLeft","ActionButton","bottom","right","ArrowForward","Container","component","maxWidth","md","TeamInfo","borderBottom","borderColor","Tabs","event","newValue","scrollButtons","Tab"],"sourceRoot":""}